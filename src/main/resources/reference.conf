# You can pass in system environment propreties like "PORT"
# See http://blog.michaelhamrah.com/2014/02/leveraging-typesafes-config-library-across-environments/
http {
  port = 8080
  port = ${?PORT}

  stop.timeout = 5000
  stop.timeout = ${?STOP_TIMEOUT}

  connector.idle.timeout=90000
  connector.idle.timeout=${?CONNECTOR_IDLE_TIMEOUT}

  webapp = "webapp"
  webapp = ${?PUBLIC}

  context.path = "/"
  context.path = ${?CONTEXT_PATH}

}

database {
  environment = "development" // "production"
  environment = ${?DATABASE_ENV}
  loglevel = "FINE" // "INFO"
  loglevel = ${?LOG_LEVEL}
  # When allow.init is true we can load a KB from JSON and overwrite an
  # existing knowlegebase really handy for testing and setting up a new
  # database. A horribly bad idea in production
  allow.init = false
}

org {
  mbari {
    vars {
      kbserver {
        daofactory = "org.mbari.vars.kbserver.dao.jpa.DefaultDAOFactory"
      #/daofactory = "org.mbari.vars.kbserver.dao.jdbc.sqlserver.SpecialDAOFactory"
      }
      knowledgebase {
        database {
          development {
            driver = "org.apache.derby.jdbc.ClientDriver"
            password = ""
            url = "jdbc:derby:memory:video-asset-manager;create=true"
            user = "sa"
            name = "Derby"
            # hikari.test = "VALUES 1" # https://stackoverflow.com/questions/3668506/efficient-sql-test-query-or-validation-query-that-will-work-across-all-or-most
          }
          production {
            driver = "org.apache.derby.jdbc.ClientDriver"
            password = ""
            url = "jdbc:derby:memory:video-asset-manager;create=true"
            user = "sa"
            name = "Derby"
            # hikari.test = "VALUES 1"
            # Available product names: Auto, Oracle, Oracle11, Oracle10g, Oracle9i, Oracle8i,
            # Attunity, Cloudscape, Database, DB2, DB2MainFrame, DBase, Derby, HANA, HSQL,
            # Informix, Informix11, JavaDB, MaxDB, MySQL4, MySQL, PointBase,
            # PostgreSQL, SQLServer, Sybase, Symfoware, timesTen
          }
        }
      }
    }
  }
}